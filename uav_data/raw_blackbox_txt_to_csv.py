import pandas as pd
import os
import subprocess
import shutil


"""
This file's purpose is to convert INAV's blackbox UVA flight log files from .TXT to csv for further analysis.
Moreover we created convertion to pandas DF.
"""


def run_blackbox_decode_direct(input_file, output_path):
    """
    Runs the blackbox_decode command to convert a TXT file to CSV and
    directs the output CSV file to the specified directory.

    Parameters:
    input_file (str): Path to the input TXT file.
    output_file (str): Path to the output CSV file.
    """
    try:
        # Extract base filename without extension
        base_filename = os.path.splitext(os.path.basename(input_file))[0]

        # Define the blackbox_decode command
        command = (f"/Users/etayar/PycharmProjects/MultivariateTSDroneAD/blackbox-tools-macos/bin/blackbox_decode "
                   f"{input_file}")

        # Run the command
        subprocess.run(command, shell=True, check=True)

        # Move all files generated by blackbox_decode to the output directory
        input_dir = os.path.dirname(input_file)
        for file in os.listdir(input_dir):
            if file.startswith(base_filename) and not file.endswith(".TXT"):
                source_path = os.path.join(input_dir, file)
                target_path = os.path.join(output_path, file)
                shutil.move(source_path, target_path)

        print(f"All related files for '{base_filename}' moved to: {output_path}")

    except subprocess.CalledProcessError as e:
        print(f"An error occurred while running blackbox_decode: {e}")
    except FileNotFoundError:
        print("File not found. Ensure the paths to blackbox_decode and the files are correct.")


def csv_to_pandas(input_source):
    """
    Fetch files from a given input source and convert them to pandas DataFrames.

    Parameters:
    input_source (str or list):
        - A list of file paths to process.
        - A directory containing multiple files to process.

    Returns:
    tuple: A tuple containing:
        - A list of pandas DataFrames (successful conversions).
        - A list of failed file paths (conversion failures).
    """

    dataframes = []
    failures = []

    # If the input is a directory
    if isinstance(input_source, str) and os.path.isdir(input_source):
        # Fetch all files in the directory
        file_paths = [
            os.path.join(input_source, file)
            for file in os.listdir(input_source)
            if os.path.isfile(os.path.join(input_source, file)) and file.endswith(".csv")
        ]

    # If the input is a list of file paths
    elif isinstance(input_source, list):
        # Validate file paths and check if they are CSV files
        file_paths = [file for file in input_source if os.path.isfile(file) and file.endswith(".csv")]

    else:
        raise ValueError("Invalid input: Provide a directory path or a list of file paths.")

    # Convert each file to a pandas DataFrame
    for file in file_paths:
        try:
            df = pd.read_csv(file)
            dataframes.append(df)
        except Exception as e:
            print(f"Failed to process file {file}: {e}")
            failures.append(file)

    return dataframes, failures


def convert_uav_raw_blackbox_txt(input_d, output_d):
    # Iterate through all files in the input directory
    for filename in os.listdir(input_d):
        input_path = os.path.join(input_d, filename)

        # Skip directories, process only files with .TXT extension
        if os.path.isfile(input_path) and filename.endswith(".TXT"):
            # Construct the output file path (same name, but .csv extension)
            output_filename = os.path.splitext(filename)[0] + ".csv"
            # output_path = os.path.join(output_dir, output_filename)

            # Run the blackbox_decode function
            run_blackbox_decode_direct(input_path, output_d)
            print(f"Processed: {filename} -> {output_filename}")


if __name__ == '__main__':

    data_path = "/Users/etayar/PycharmProjects/MultivariateTSDroneAD/uav_data/boaz_csv_flight_data/temp_loc/boaz_flight_1.01.csv"
    df = pd.read_csv(data_path)
    selected_fields = [
        "IMUTemperature",  # IMU sensor temperature
        "baroTemperature",  # Barometer temperature
        "sens0Temp", "sens1Temp", "sens2Temp", "sens3Temp", "sens4Temp", "sens5Temp", "sens6Temp", "sens7Temp",  # Sensor temperatures
        "escTemperature",  #  ESC (Electronic Speed Controller) temperature
        "accSmooth[0]", "accSmooth[1]", "accSmooth[2]", # X, Y, Z axis acceleration
        "accVib",   # Vibration from the accelerometer
        "escRPM", # ESC RPM
        "gyroADC[0]", # Roll rate
        "gyroADC[1]", # Pitch rate
        "gyroADC[2]", # Yaw rate
        "attitude[0]", # absolute angle X axis  DO WE NEED ABSOLUT VALUES?
        "attitude[1]", # absolute angle Y axis
        "attitude[2]", # absolute angle Z axis
        "amperage (A)" # Current in Amperes
    ]

    mvts = df[selected_fields]

    # Define input and output directories
    input_dir = "/Users/etayar/PycharmProjects/MultivariateTSDroneAD/uav_data/uav_raw_blackbox_data/"
    output_dir = "/Users/etayar/PycharmProjects/MultivariateTSDroneAD/uav_data/uav_blackbox_data_as_csv/"

    res = csv_to_pandas(input_source=output_dir)

    convert_uav_raw_blackbox_txt(input_dir, output_dir)
