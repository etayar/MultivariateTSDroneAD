import pandas as pd
import numpy as np
import os
import subprocess
import shutil


import subprocess

def run_blackbox_decode_direct(input_file, output_file):
    """
    Runs the blackbox_decode command to convert a TXT file to CSV and
    directs the output CSV file to the specified directory.

    Parameters:
    input_file (str): Path to the input TXT file.
    output_file (str): Path to the output CSV file.
    """
    try:
        # Extract base filename without extension
        base_filename = os.path.splitext(os.path.basename(input_file))[0]

        # Define the blackbox_decode command
        command = (f"/Users/etayar/PycharmProjects/MultivariateTSDroneAD/blackbox-tools-macos/bin/blackbox_decode "
                   f"{input_file}")

        # Run the command
        subprocess.run(command, shell=True, check=True)

        # Move all files generated by blackbox_decode to the output directory
        input_dir = os.path.dirname(input_file)
        for file in os.listdir(input_dir):
            if file.startswith(base_filename) and not file.endswith(".TXT"):
                source_path = os.path.join(input_dir, file)
                target_path = os.path.join(output_dir, file)
                shutil.move(source_path, target_path)

        print(f"All related files for '{base_filename}' moved to: {output_dir}")

    except subprocess.CalledProcessError as e:
        print(f"An error occurred while running blackbox_decode: {e}")
    except FileNotFoundError:
        print("File not found. Ensure the paths to blackbox_decode and the files are correct.")


if __name__ == '__main__':
    # Define input and output directories
    input_dir = "/Users/etayar/PycharmProjects/MultivariateTSDroneAD/uav_data/uav_raw_blackbox_data/"
    output_dir = "/Users/etayar/PycharmProjects/MultivariateTSDroneAD/uav_data/uav_blackbox_data_as_csv/"

    # Iterate through all files in the input directory
    for filename in os.listdir(input_dir):
        input_path = os.path.join(input_dir, filename)

        # Skip directories, process only files with .TXT extension
        if os.path.isfile(input_path) and filename.endswith(".TXT"):
            # Construct the output file path (same name, but .csv extension)
            output_filename = os.path.splitext(filename)[0] + ".csv"
            output_path = os.path.join(output_dir, output_filename)

            # Run the blackbox_decode function
            run_blackbox_decode_direct(input_path, output_path)
            print(f"Processed: {filename} -> {output_filename}")
